function [vitBloc wBloc vitBalle] = ApresCollision(p_intersec,posBalle,vitBalle,posBloc,vitBloc,wBloc)  restitution = 0.8;    mBloc = 0.58;  coteBloc = 0.06;    mBalle = 0.07;  rBalle = 0.02;  wBalle = [0,0,0];      IBloc = [            (mBloc*(coteBloc^2))/6,0,0;            0,(mBloc*(coteBloc^2))/6,0;            0,0,(mBloc*(coteBloc^2))/6            ];                  x = posBloc(1);  y = posBloc(2);  z = posBloc(3);  mat = [     (y^2 + z^2), (-x * y), (-x * z);    (-y * x), (x^2 + z^2), (-y * z) ;    (-z * x), (-z * y), (x^2 + y^2)  ];  inertiaBloc = IBloc + (mBloc * mat);                IBalle = [          (2*mBalle*(rBalle^2))/5,0,0;          0,(2*mBalle*(rBalle^2))/5,0;          0,0,(2*mBalle*(rBalle^2))/5          ];            x = posBalle(1);  y = posBalle(2);  z = posBalle(3);  mat = [     (y^2 + z^2), (-x * y), (-x * z);    (-y * x), (x^2 + z^2), (-y * z) ;    (-z * x), (-z * y), (x^2 + y^2)  ];  inertiaBalle = IBalle + (mBalle * mat);                   rBlocp = p_intersec - posBloc;  rBallep = p_intersec - posBalle;       vBlocp = vitBloc' + (cross(wBloc, rBlocp));  vBallep = vitBalle' + (cross(wBalle, rBallep));    normale =  p_intersec - posBalle;  normale = normale/norm(normale);    vr_ = dot(normale,(vBallep-vBlocp));    GA = dot(normale, cross(cross(rBallep,normale)/inertiaBalle,rBallep));  GB = dot(normale, cross(cross(rBlocp,normale)/inertiaBloc,rBlocp));    alpha = 1 / ((1 / mBalle) + (1/mBloc) + GA + GB);    impulsionConstant =  -alpha*(1+restitution)*vr_;    impulsionVector = normale * impulsionConstant;  vitBalle = vitBalle + (impulsionVector/mBalle)';  vitBloc = vitBloc - (impulsionVector/mBloc)';    wBloc = wBloc +  (cross(posBloc,impulsionVector) / inertiaBloc);    
endfunction

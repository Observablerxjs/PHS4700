function [Touche tf blocf ballef ]=Devoir3(bloci,ballei,tl)    accs = {@AccBalle};  dt = 0.1;  Touche = -1    posBloc = bloci(1,:);  vitBloc = bloci(2,:);  wBloc = bloci(3,:);    posBalle = ballei(1,:);  vitBalle = ballei(2,:);  mBalle = 0.07;  rBalle = 0.02;    Ibloc = [ (mBloc/6)*(0.06)^2, 0, 0 ;            0, (mBloc/6)*(0.06)^2, 0 ;            0, 0, (mBloc/6)*(0.06)^2] ;              Iballe = [(2/5)*mBalle*(rBalle^2), 0 ,0;            0, (2/5)*mBalle*(rBalle^2), 0;            0,0,(2/5)*mBalle*(rBalle^2)] ;    t = 0;    while(Touche == -1)        [vitBloc,posBloc] = RungeKutta(vitBloc,posBloc,dt,mBloc,@AccBloc);    [vitBalle,posBalle] = RungeKutta(vitBalle,posBalle,dt,mBalle,@AccBloc);    # TODO later    wBloc = wBloc + (MomentFriction(vitA, LA, lA, mA) / Ibloc) * dt;    # wBalle    ##########        Touche = VerifierConditions(posBloc,posBalle);        t = t + dt  end    
endfunctionfunction [a] = AccBalle(vitesse,wb0,m)    gravite = [0,0,-9.8]';    Sbloc = pi * (0.02)^2;  k = 1;    friction = - k*Sbloc*vitesse;    a = (gravite + friction) / m ;  endfunctionfunction [a] = AccBloc(vitesse,m)    gravite = [0,0,-9.8]';    Sbloc = 1.2 * (0.06)^2;  k = 1;    friction = - k*Sbloc*vitesse;    a = gravite + friction ;  endfunction  function [vitesse position] = RungeKutta ( v, pos, dt, m, fnc )     k1 = feval(fnc , v , w, m, r ) ;  k2 = feval(fnc , v + (k1*dt/2) , w, m, r) ;  k3 = feval(fnc , v + (k2*dt/2) , w, m, r) ;  k4 = feval(fnc , v + (k3*dt) , w, m, r) ;  vitesse = v + (( k1 + 2*k2 + 2*k3 + k4 )*(dt/6));    position = pos + vitesse'*dt;  endfunction

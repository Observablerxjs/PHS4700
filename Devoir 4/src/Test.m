[xi,yi,zi,face]=Devoir4(nout(itst),nin(itst),dep(itst,:));##  scatter3(cos(azimMin),sin(azimMin),0);##  hold on;##  ##  scatter3(cos(azimMax),sin(azimMax),0);##  hold on;##    ##  scatter3(depart(1),depart(2),depart(3));##  hold on;##  scatter3(pointHaut(1),pointHaut(2),pointHaut(3));##  hold on;##  scatter3(pointBas(1),pointBas(2),pointBas(3));##  hold on;##  vec1 = pointHaut - depart; ##  quiver3(depart(1),depart(2),depart(3),vec1(1),vec1(2),vec1(3));##  hold on;##  vec2 = pointBas - depart;##  quiver3(depart(1),depart(2),depart(3),vec2(1),vec2(2),vec2(3));##  hold on;##  quiver3(0,0,0,pointHaut(1),pointHaut(2),pointHaut(3));##  hold on;##  quiver3(0,0,0,pointBas(1),pointBas(2),pointBas(3));##  hold on;  ##  polMin = acos(dot(pointHaut, axeZ) / (norm(pointHaut) * norm(axeZ)));##  polMax = acos(dot(axeZ, pointBas) / (norm(axeZ) * norm(pointBas)));  ##  rayX = sin(polMin)*cos(azimMin);##  rayY = sin(polMin)*sin(azimMin);##  rayZ = cos(polMin)  ##  scatter3(rayX,rayY,rayZ);##  hold on;  ##  rayX = sin(polMax)*cos(atan(pointHaut(2)/pointHaut(1)));##  rayY = sin(polMax)*sin(atan(pointHaut(2)/pointHaut(1)));##  rayZ = cos(polMax)  ##  scatter3(rayX,rayY,rayZ);##  hold on;##  pol_n = (polMin + polMax)/2;##  azim_m = (azimMin + azimMax)/2;##  ##  rayonX = sin(pol_n)*cos(azim_m);##  rayonY = sin(pol_n)*sin(azim_m);##  rayonZ = cos(pol_n);##  ##  rayon_vec = [rayonX,rayonY,rayonZ] + depart;##  ##  scatter3(rayon_vec(1),rayon_vec(2),rayon_vec(3));##  ##  rayon_vec = rayon_vec - depart;##  ##  [x y] = intersectionEllipsoidLigne(depart,rayon_vec,[4,4,11]);